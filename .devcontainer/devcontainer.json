{
    "name": "Nanopb Development",
    "dockerComposeFile": "docker-compose.yml",
    "service": "nanopb-dev",
    "workspaceFolder": "/workspace",
    
    // Features to add to the dev container
    "features": {
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/common-utils:2": {
            "installZsh": true,
            "configureZshAsDefaultShell": true,
            "installOhMyZsh": true,
            "upgradePackages": true
        }
    },

    // Configure tool-specific properties
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cmake-tools",
                "ms-python.python",
                "ms-python.vscode-pylance",
                "zxh404.vscode-proto3",
                "github.copilot",
                "eamodio.gitlens",
                "streetsidesoftware.code-spell-checker"
            ],
            "settings": {
                "terminal.integrated.defaultProfile.linux": "zsh",
                "python.defaultInterpreterPath": "/usr/bin/python3",
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": true,
                "editor.formatOnSave": true,
                "files.associations": {
                    "*.proto": "proto3",
                    "*.pb.h": "c",
                    "*.pb.c": "c"
                }
            }
        }
    },

    // Use 'forwardPorts' to make a list of ports inside the container available locally
    // "forwardPorts": [],

    // Use 'postCreateCommand' to run commands after the container is created
    "postCreateCommand": "chmod +x /workspace/.devcontainer/dev-setup.sh && /workspace/.devcontainer/dev-setup.sh",

    // Use 'postStartCommand' to run commands after the container is started
    "postStartCommand": "git config --global --add safe.directory /workspace",

    // Set the default shell
    "remoteUser": "root",

    // Environment variables
    "containerEnv": {
        "PYTHONPATH": "/workspace/generator"
    },

    // Run arguments
    "runArgs": [
        "--cap-add=SYS_PTRACE",
        "--security-opt", "seccomp=unconfined"
    ]
}
